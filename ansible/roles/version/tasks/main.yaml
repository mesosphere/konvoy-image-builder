---
# NOTE(jkoelker) Grab the build tag (eg. `fips.0` from `v1.21.6+fips.0`)
- name: detect build
  shell: kubeadm version -o short
  register: kubeadm_version_out

- name: set kubeadm version
  set_fact:
    kubeadm_version: "{{ kubeadm_version_out.stdout | trim }}"

# list the kubeadm images with the default config first
# this is only needed to get the etcd version
- name: determine etcd image
  shell: kubeadm config images list
  register: kubernetes_kubeadm_images_with_default_config

- name: set etcd image
  set_fact:
    etcd_version:  "{{
      kubernetes_kubeadm_images_with_default_config.stdout_lines |
      select('match', '.*/etcd:.*') | first |
      split(':') | last
    }}"
  when: '"fips" not in kubeadm_version'


# the default etcd image is like: 3.5.5-0
# but the FIPS image is v3.5.5_fips.0
# add a 'v' prefix
# regex_replace "-0" with an empty character
# add a "fips.0" suffix
- name: set FIPS etcd image
  set_fact:
    etcd_version:  "v{{
      kubernetes_kubeadm_images_with_default_config.stdout_lines |
      select('match', '.*/etcd:.*') | first |
      split(':') | last |
      regex_replace('-[^-]+$', '')
    }}_fips.0"
  when: '"fips" in kubeadm_version'

- name: copy kubeadm config
  template:
    src: "kubeadm-conf.yaml.tmpl"
    dest: "kubeadm-conf.yaml"

- name: determine kubernetes images
  shell: kubeadm config images list --config kubeadm-conf.yaml
  register: kubernetes_kubeadm_images

- name: set kubernetes images
  set_fact:
    kubernetes_images: "{{ kubernetes_kubeadm_images.stdout_lines }}"

- name: set pause image
  set_fact:
    pause_image: "{{
      kubernetes_images |
      select('match', '.*/pause:.*') |
      first
    }}"

- name: Get containerd pause image name
  # NOTE Only `config default` guarantees to output the containerd sandbox image configuration. By comparison, if
  # user-defined configurations are defined for containerd, then `config dump` merges them, and, as a result, may end up
  # removing the sandbox image configuration. Also, if no configuration files exist on disk, `config dump` returns an
  # error.
  command: containerd config default
  register: system_containerd_config_default_cmd
- name: Set containerd pause image name fact
  set_fact:
      # If match is found, evaluates to a list, e.g., ["registry.k8s.io/pause:3.6"]. Otherwise, evaluates to an empty string.
      containerd_sandbox_image: "{{ system_containerd_config_default_cmd.stdout | regex_search('sandbox_image = \"(?P<name>.*)\"', '\\g<name>') }}"

# NOTE Create a list for easy concatenation.
- name: Set containerd_images fact as default empty list
  set_fact:
    containerd_images: []
- name: Append containerd pause image, if defined, to the containerd_images fact
  set_fact:
    containerd_images: "{{ containerd_sandbox_image }}"
  when: containerd_sandbox_image != ""

# Copyright 2018 The Kubernetes Authors.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: install pip
  package:
    name: python3-pip
    state: present
  when:
    - ansible_os_family == "Debian"

# solution from: https://stackoverflow.com/a/76721835
# pinning awscli==1.29.9 fails
# likely due to the pypy setup
- name: install cython for flatcar
  pip:
    name: "{{ item.package }}"
    executable: pip3
    extra_args: "{{ item.extra }}"
  with_items:
    - { "package": "cython<3.0.0", "extra": "wheel" }
    - { "package": "pyyaml==5.4.1", "extra": "--no-build-isolation" }
  when:
    - ansible_distribution == "Flatcar"


- name: install cloud-init deps
  yum:
    name: "{{ packages }}"
    state: present
    enablerepo: "{{ 'offline' if offline_mode_enabled else '' }}"
    disablerepo: "{{ '*' if offline_mode_enabled else '' }}"
  vars:
    packages:
      - cloud-utils-growpart
      - "python{{ '3' if ansible_distribution_major_version|int >= 9 else '2'}}-pip"
  when: ansible_os_family == "RedHat"

- name: install cloud-init for RHEL
  yum:
    name: cloud-init
    state: present
    enablerepo: "{{ 'offline' if offline_mode_enabled else '' }}"
    disablerepo: "{{ '*' if offline_mode_enabled else '' }}"
  when:
  - ansible_os_family == "RedHat"

- name: install aws clients
  pip:
    name: "awscli"
    executable: pip3
    extra_args: "{{ '--no-cache-dir --no-index --find-links=' + pip_packages_remote_filesystem_repo_path if offline_mode_enabled }}"
  when:
    - ansible_distribution != "Amazon"
    - ansible_os_family != "Suse"


- block:
  - name: copy ssm rpm
    copy:
      src: /opt/amazon-ssm-agent.rpm
      dest: /opt/amazon-ssm-agent.rpm

  - name: install aws agents RPM
    ansible.builtin.yum:
      name: /opt/amazon-ssm-agent.rpm
      state: present
      disable_gpg_check: yes
      enablerepo: "{{ 'offline' if offline_mode_enabled else '' }}"
      disablerepo: "{{ '*' if offline_mode_enabled else '' }}"
    when: ansible_os_family == "RedHat" and ansible_distribution != "Amazon"

  - name: install aws agents RPM
    ansible.builtin.zypper:
      name: /opt/amazon-ssm-agent.rpm
      state: present
      disable_gpg_check: yes
    when: ansible_os_family == "Suse" and ansible_distribution != "Amazon"

- name: install aws cli for amazon linux
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - awscli
  when: ansible_distribution == "Amazon"

- name: Ensure ssm agent is running RPM
  service:
    name: amazon-ssm-agent
    state: started
    enabled: yes
  when: ansible_os_family in ["RedHat", "Suse"]

- name: install aws agents Ubuntu
  shell: snap install amazon-ssm-agent --classic
  when: ansible_distribution == "Ubuntu"

- name: Ensure ssm agent is running Ubuntu
  service:
    name: snap.amazon-ssm-agent.amazon-ssm-agent.service
    state: started
    enabled: yes
  when: ansible_distribution == "Ubuntu"

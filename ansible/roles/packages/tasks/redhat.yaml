---
- name: find installed RPMs
  yum:
    list: installed
    enablerepo: "{{ 'offline' if offline_mode_enabled else '' }}"
    disablerepo: "{{ '*' if offline_mode_enabled else '' }}"
    update_cache: true
  register: installed_rpms

- name: install common RPMS if already not installed
  yum:
    name: "{{ item }}"
    state: present
    enablerepo: "{{ 'offline' if offline_mode_enabled else '' }}"
    disablerepo: "{{ '*' if offline_mode_enabled else '' }}"
    update_cache: true
  when: installed_rpms.results | selectattr('name','equalto', item ) | list | count == 0
  with_items:
      - audit
      - ca-certificates
      - conntrack-tools
      - chrony
      - curl
      - "{{ 'iptables-' if ansible_distribution_major_version == '8' }}ebtables"
      - open-vm-tools
      - python3-pip
      - python3-netifaces
      - python3-requests
      - socat
      - sysstat
      - nfs-utils
      - NetworkManager
  register: result
  until: result is success
  retries: 5
  delay: 3

- name: enable auditd
  systemd:
    name: auditd
    enabled: true

- name: install el8 requirements
  yum:
    name:
      - iproute-tc
    state: present
    enablerepo: "{{ 'offline' if offline_mode_enabled else '' }}"
    disablerepo: "{{ '*' if offline_mode_enabled else '' }}"
  when:
    - ansible_distribution_major_version == '8'

- name: remove versionlock for kubelet and kubectl packages
  command: yum versionlock {{ '--disablerepo "*" --enablerepo offline' if offline_mode_enabled else '' }} delete {{ item }}
  with_items:
    - kubelet
    - kubectl
  args:
    warn: false
  ignore_errors: true
  register: command_result
  changed_when: >
    'command_result.stdout is regex(".*versionlock deleted: [1-9]+.*")'
  when:
    - versionlock_plugin_enabled
    - item in exportedversionlocklist.stdout

# If the rpms for the kubernetes version provided by the customer
# exists on the current container, we should copy it to the remote
# and install it with the file.
- name: check kubernetes rpms exist for provided version
  stat:
    path: "/opt/{{ 'kubectl-' + package_versions.kubernetes_rpm }}{{ '-fips' if fips.enabled else '' }}.rpm"
  delegate_to: localhost
  register: haslocalk8srpms
  become: false

- block:
    - name: copy gpg key
      copy:
        src: /opt/d2iq-sign-authority-gpg-public-key
        dest: /opt/d2iq-sign-authority-gpg-public-key

    - name: import key
      ansible.builtin.rpm_key:
        state: present
        key: /opt/d2iq-sign-authority-gpg-public-key

    - name: copy kubectl rpm
      copy:
        src: "/opt/{{ 'kubectl-' + package_versions.kubernetes_rpm }}{{ '-fips' if fips.enabled else '' }}.rpm"
        dest: "/opt/{{ 'kubectl-' + package_versions.kubernetes_rpm }}.rpm"

    - name: copy kubernetes_cni rpm
      copy:
        src: "/opt/{{ 'kubernetes-cni-' + kubernetes_cni_version }}-0{{ '-fips' if fips.enabled else '' }}.rpm"
        dest: "/opt/{{ 'kubernetes-cni-' + kubernetes_cni_version }}-0.rpm"

    - name: copy kubelet rpm
      copy:
        src: "/opt/{{ 'kubelet-' + package_versions.kubernetes_rpm }}{{ '-fips' if fips.enabled else '' }}.rpm"
        dest: "/opt/{{ 'kubelet-' + package_versions.kubernetes_rpm }}.rpm"
  when:
    - haslocalk8srpms.stat.exists

- name: install kubectl rpm package
  yum:
    name: "{{ '/opt/' if haslocalk8srpms.stat.exists }}{{ 'kubectl-' + package_versions.kubernetes_rpm }}{{ '.rpm' if haslocalk8srpms.stat.exists }}"
    state: present
    update_cache: true
    enablerepo: "{{ 'offline' if offline_mode_enabled else '' }}"
    disablerepo: "{{ '*' if offline_mode_enabled else '' }}"
  register: result
  until: result is success
  retries: 3
  delay: 3

- name: install kubernetes_cni and kubelet rpm packages
  yum:
    name:
      - "{{ '/opt/' if haslocalk8srpms.stat.exists }}{{ 'kubernetes-cni-' + kubernetes_cni_version }}-0{{ '.rpm' if haslocalk8srpms.stat.exists }}"
      - "{{ '/opt/' if haslocalk8srpms.stat.exists }}{{ 'kubelet-' + package_versions.kubernetes_rpm }}{{ '.rpm' if haslocalk8srpms.stat.exists }}"
    state: present
    update_cache: true
    enablerepo: "{{ 'offline' if offline_mode_enabled else '' }}"
    disablerepo: "{{ '*' if offline_mode_enabled else '' }}"
  register: installation_rpm
  until: installation_rpm is success
  retries: 3
  delay: 3

- name: add versionlock for kubelet and kubectl packages
  command: yum versionlock {{ '--disablerepo "*" --enablerepo offline' if offline_mode_enabled else '' }} add {{ item }}
  with_items:
    - kubelet
    - kubectl
  args:
    warn: false
  register: command_result
  changed_when: >
    'command_result.stdout is regex(".*versionlock added: [1-9]+.*")'
  when:
    - versionlock_plugin_enabled

---
- name: create containerd systemd directory
  file:
    path: "/etc/systemd/system/containerd.service.d/"
    state: directory

- name: create containerd directory
  file:
    path: "/etc/containerd/"
    state: directory

- name: copy default configuration to remote
  template:
    src: "config.toml.tmpl"
    dest: "/etc/containerd/config.toml"
  notify:
    - restart containerd

- name: Fail if pre-installed containerd version does not match for Flatcar
  shell: containerd --version | cut -d\  -f 3
  register: system_containerd_version
  # TODO: specify version range to fail on
  # failed_when: "containerd_version not in system_containerd_version.stdout"
  changed_when: false


- name: Store the Flatcar containerd version as fact
  set_fact:
    containerd_version: "{{ system_containerd_version.stdout }}"


- name: Create a directory if it does not exist
  file:
    path: "{{ flatcar_sysusr_prefix }}/bin"
    state: directory
    mode: 0755

- name: stat containerd-shim-runc-v1
  register: containerdshimruncv1
  stat:
    path: /opt/bin/containerd-shim-runc-v1

- name: stat containerd-shim-runc-v2
  register: containerdshimruncv2
  stat:
    path: /opt/bin/containerd-shim-runc-v2

- name: containerd shim
  when:
    - containerdshimruncv1.stat.islnk is not defined
    - containerdshimruncv2.stat.islnk is not defined
  block:
    - name: download containerd
      get_url:
        url: "{{ containerd_url }}"
        # checksum: "sha256:{{ containerd_sha256 }}"
        dest: /tmp/containerd.tar.gz
        mode: 0600

    - name: unpack containerd
      unarchive:
        remote_src: True
        src: /tmp/containerd.tar.gz
        dest: /opt
        extra_opts:
          - --no-overwrite-dir
          - --strip-components=2
          - --wildcards
          - '*containerd-shim-runc-v*'
    - name: delete tarball
      file:
        path: /tmp/containerd.tar.gz
        state: absent

- name: Create symlinks for containerd
  file:
    src: /usr/bin/{{ item }}
    dest: "{{ flatcar_sysusr_prefix }}/bin/{{ item }}"
    state: link
  loop: "{{ containerd_flatcar_bins }}"

- name: Create systemd unit file for containerd
  template:
    dest: /etc/systemd/system/containerd.service
    src: etc/systemd/system/containerd-flatcar.service
    mode: 0600

- name: Create containerd memory pressure drop in file
  template:
    dest: /etc/systemd/system/containerd.service.d/memory-pressure.conf
    src: etc/systemd/system/containerd.service.d/memory-pressure.conf
    mode: 0644

- name: Create containerd max tasks drop in file
  template:
    dest: /etc/systemd/system/containerd.service.d/max-tasks.conf
    src: etc/systemd/system/containerd.service.d/max-tasks.conf
    mode: 0644

- name: Create containerd http proxy conf file if needed
  template:
    dest: /etc/systemd/system/containerd.service.d/http-proxy.conf
    src: etc/systemd/system/containerd.service.d/http-proxy.conf
    mode: 0644
  when: http_proxy is defined or https_proxy is defined

- name: enable containerd
  service:
    name: containerd
    enabled: yes
  notify:
    - reload systemd
    - restart containerd

- include: url.yaml

- name: Get crictl version
  shell: crictl --version | cut -d\  -f 3
  register: system_crictl_version
  changed_when: false
# must include crictl-url.yml after installing containerd,
# as the cri-containerd tarball also includes crictl.
- include: crictl-url.yaml
  when: crictl_version_flatcar not in system_crictl_version.stdout

- name: create kubelet systemd directory
  file:
    path: "/etc/systemd/system/kubelet.service.d/"
    state: directory

- name: enable kubelet
  service:
    name: kubelet
    enabled: yes
  notify:
    - reload systemd
    - restart kubelet

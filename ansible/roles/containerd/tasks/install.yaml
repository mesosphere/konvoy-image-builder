---

# Check if containerd file already exists
# used to skip the download when offline
- name: check if the containerd tar exists
  changed_when: false
  stat:
    path: "{{ containerd_remote_bundle_path }}/{{ containerd_tar_file }}"
  register: containerd_tar_file_exists

- name: create containerd bundle directory
  file:
    path: "{{ containerd_remote_bundle_path }}"
    state: directory
  when:
    - not containerd_tar_file_exists.stat.exists

- name: download containerd
  get_url:
    url: "{{ containerd_base_url }}/{{ containerd_tar_file }}"
    dest: "{{ containerd_remote_bundle_path }}/{{ containerd_tar_file }}"
    mode: 0600
    force: true
  when:
    - not containerd_tar_file_exists.stat.exists

- name: unpack containerd
  unarchive:
    remote_src: True
    src: "{{ containerd_remote_bundle_path }}/{{ containerd_tar_file }}"
    dest: /
    extra_opts:
      - --no-overwrite-dir

# Some ansible tasks run ctr and containerd. For these tasks, the executable must be in the PATH of the ansible process.
# On some distributions, /usr/local/bin is not in the PATH. The symlink makes the executables available in /usr/bin,
# which is in the PATH across all supported distributions. On flatcar, the executables are already in the PATH.
- name: symlink ctr to /usr/local/bin
  file:
    src: "/usr/local/bin/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    mode: 0777
    state: link
    force: yes
  loop:
    - ctr
    - containerd

# Workaround for issue that affects the kernel used by RHEL 7.9, CentOS 7.9, and Oracle Linux 7.9
# For issue, see https://bugzilla.redhat.com/show_bug.cgi?id=1441737.
# Solution adapted from https://github.com/kubernetes-sigs/kubespray/blob/999586a110eed72914358a1b5bd182df514e755b/roles/kubernetes/preinstall/tasks/0080-system-configurations.yml#L90-L106.
- name: Check if we need to set fs.may_detach_mounts
  stat:
    # The parameter is present only on affected kernels.
    path: /proc/sys/fs/may_detach_mounts
    get_attributes: no
    get_checksum: no
    get_mime: no
  register: fs_may_detach_mounts
  ignore_errors: true

- name: Set fs.may_detach_mounts if needed
  sysctl:
    sysctl_file: "/etc/sysctl.d/fs-may_detach_mounts.conf"
    name: fs.may_detach_mounts
    value: 1
    state: present
    reload: yes
  #  If the parameter is present, it must be set to 1.
  when: fs_may_detach_mounts.stat.exists | d(false)

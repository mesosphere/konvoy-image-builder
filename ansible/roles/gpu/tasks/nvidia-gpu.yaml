---
- name: "NVIDIA Gpu - CentOS 7"
  include_tasks: nvidia-gpu-CentOS7.yaml
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == '7'
- name: "NVIDIA Gpu - RHEL 7"
  include_tasks: nvidia-gpu-RHEL7.yaml
  when: ansible_distribution == 'RedHat' and ansible_distribution_major_version == '7'
- name: "NVIDIA Gpu - RHEL 8"
  include_tasks: nvidia-gpu-RHEL8.yaml
  when: ansible_distribution == 'RedHat' and ansible_distribution_major_version == '8'
- name: "NVIDIA Gpu - SLES 15"
  include_tasks: nvidia-gpu-SLES15.yaml
  when: ansible_distribution == "SLES" and ansible_distribution_major_version == '15'
- name: "NVIDIA Gpu - Flatcar"
  include_tasks: nvidia-gpu-Flatcar.yaml
  when: ansible_distribution == "Flatcar"
- name: "NVIDIA Gpu - Ubuntu 20"
  include_tasks: nvidia-gpu-Ubuntu20.yaml
  when: ansible_distribution == "Ubuntu"

- name: create nouveau blacklist file
  file:
    path: /etc/modprobe.d/blacklist-nouveau.conf
    state: touch

- name: add contents
  lineinfile:
    path: /etc/modprobe.d/blacklist-nouveau.conf
    line: " {{ item.line }}"
    loop:
      - {line: 'blacklist nouveau'}
      - {line: 'options nouveau modeset=0'}

- name: regenerate the kernel initramfs
  command: dracut --force
  become: yes
  when:
    - ansible_os_family == "RedHat"

- name: regenerate the kernel initramfs
  command: update-initramfs -u
  become: yes
  when: ansible_os_family == "Debian"

# Download and install gpu runfile
- name: create nvidia install directory
  file:
    path: /opt/dkp/nvidia
    state: directory

- name: download gpu runfile
  get_url:
    url: "{{ nvidia_runfile_installer_url }}"
    dest: /opt/dkp/nvidia/nvidia-{{ nvidia_driver_version }}.run
    mode: 711
  when:
   - not offline_mode_enabled

- name: extract driver source files
  shell: |
    /opt/dkp/nvidia/nvidia-{{ nvidia_driver_version }}.run -x -s
  args:
    chdir: /opt/dkp/nvidia
  become: yes

- name: install driver
  shell:
    ./nvidia-installer -s \
      --log-file-name=$(pwd)/nvidia-installer.log || true
  args:
    chdir: /opt/dkp/nvidia/NVIDIA-Linux-x86_64-{{ nvidia_driver_version }}

- name: Create ld.so conf dir
  file:
    path: /etc/ld.so.conf.d/
    state: directory

- name: Create ld.so conf for nvidia
  file:
    path: /etc/ld.so.conf.d/nvidia.conf
    state: touch

- name: Write location of library files
  lineinfile:
    path: /etc/ld.so.conf.d/nvidia.conf
    line: '/usr/lib64'
    insertbefore: BOF

- name: run nvidia-smi
  shell:
    executable: /bin/bash
    cmd: nvidia-smi

- name: copy script for systemd unit
  copy:
    dest: /opt/dkp/nvidia/nvidia-persistenced.sh
    src: ./nvidia-persistenced.sh
    mode: 711

- name: create systemd unit file for nvidia-persistenced service
  template:
    dest: /etc/systemd/system/nvidia-persistenced.service
    src: etc/systemd/system/nvidia-persistenced.service
    mode: 0600

- name: force systemd to reread configs
  ansible.builtin.systemd:
    daemon_reload: yes
    name: nvidia-persistenced
    enabled: yes
    state: restarted
  become: yes

---
python_path: ""

# This is also in images/common.yaml as that's where the go code expects it to be.
# If it's not there, the kubernetes_full_version will have "None" for a version number.
kubernetes_version: "1.22.8"

containerd_version: "1.4.13"
kubernetes_cni_version: "0.9.1"
crictl_version: "1.22.0"
kubernetes_semver: "v{{ kubernetes_version }}"

# Adding kubernetes_full_version for mitogen runs. This variable is always overridden
# in go code.
kubernetes_full_version: "{{ kubernetes_version }}+{{ kubernetes_build_metadata }}"
kubernetes_image_tag: "{{ kubernetes_full_version  | replace('+', '_') }}"
package_versions:
  enable_repository_installation: "{{ (spec.osPackages.enableAdditionalRepositories if spec.osPackages is defined else true)|default(true)|bool }}"
  # the version may contain d2iq specific suffix, remove it when downloading packages
  kubernetes_rpm: "{{ kubernetes_version }}-0"
  kubernetes_deb: "{{ kubernetes_version }}-00"
  kubenode: "{{ kubernetes_version }}"

# variable used for seeding images
k8s_image_registry: "k8s.gcr.io"
coredns_image_registry_repository: "k8s.gcr.io/coredns/coredns"
control_plane_images: []

aws_images: []

extra_images: []

# FIXME (dkoshkin) use an OS specific and FIPS tar
containerd_tar_file: containerd-{{ containerd_version }}-centos-7.9-d2iq-fips.1.tar.gz
containerd_url: https://konvoy-image-builder-test.s3.us-west-2.amazonaws.com/{{ containerd_tar_file }}
kubernetes_http_source: https://storage.googleapis.com/kubernetes-release/release
kubernetes_cni_semver: v{{ kubernetes_cni_version }}
kubernetes_cni_http_checksum: sha256:https://storage.googleapis.com/k8s-artifacts-cni/release/{{ kubernetes_cni_semver }}/cni-plugins-linux-amd64-{{ kubernetes_cni_semver }}.tgz.sha256
kubernetes_cni_http_source: https://github.com/containernetworking/plugins/releases/download
crictl_url: https://github.com/kubernetes-sigs/cri-tools/releases/download/v{{ crictl_version }}/crictl-v{{ crictl_version }}-linux-amd64.tar.gz
crictl_sha256: 45e0556c42616af60ebe93bf4691056338b3ea0001c0201a6a8ff8b1dbc0652a
containerd_cri_socket: /run/containerd/containerd.sock
flatcar_containerd_cri_socket: /run/docker/libcontainerd/docker-containerd.sock
systemd_prefix: /usr/lib/systemd/site-packages
flatcar_systemd_prefix: /etc/systemd
sysusr_prefix: /usr
sysusrlocal_prefix: /usr/local
flatcar_sysusr_prefix: /opt
flatcar_sysusrlocal_prefix: /opt

kubernetes_goarch: amd64
kubernetes_bins:
  - kubectl
  - kubelet

sysprep: true

download_images: Null
images_local_bundle_dir: ""
images_cache: /opt/dkp/images

os_packages_local_bundle_file: ""
os_packages_remote_bundle_path: "/opt/dkp/packages/"

containerd_local_bundle_file: ""
containerd_remote_bundle_path: "/opt/dkp/containerd/"

pip_packages_local_bundle_file: ""
pip_packages_remote_bundle_path: "/opt/dkp/pip-packages/"
pip_packages_remote_filesystem_repo_path: "/opt/dkp/pip-packages/offline-packages/"

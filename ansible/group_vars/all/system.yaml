# Alma linux
alma_linux_extra_repo_base_url: https://repo.almalinux.org/almalinux/$releasever/extras/$basearch/os/
alma_linux_extra_repo_mirror_list_url: https://mirrors.almalinux.org/mirrorlist/$releasever/extras
alma_linux_gpg_key_url: https://repo.almalinux.org/almalinux/RPM-GPG-KEY-AlmaLinux
# TODO: use overrides to set these
kubernetes_rpm_repository_url: "https://packages.d2iq.com/konvoy/stable/linux/repos/el/kubernetes-v{{ kubernetes_version }}-nokmem/x86_64"
kubernetes_rpm_gpg_key_url: "https://packages.d2iq.com/konvoy/stable/linux/repos/d2iq-sign-authority-gpg-public-key"

## Debian
kubernetes_deb_repository_url: "https://packages.cloud.google.com/apt/"
kubernetes_deb_gpg_key_url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
kubernetes_deb_release_name: "kubernetes-xenial"

# containerd package
# Appstream is enabled by default in rhel8, so install the package from local repositories in that case
docker_rpm_container_selinux_package_url: "{{ 'http://mirror.centos.org/centos/7/extras/x86_64/Packages/container-selinux-2.107-3.el7.noarch.rpm' if ansible_distribution_major_version|int < 8 else 'container-selinux' }}"
docker_rpm_container_selinux_gpg_key_url: "http://mirror.centos.org/centos/RPM-GPG-KEY-CentOS-7"

# variable used to set the default image registry for containerd
default_image_registry: ""

fips:
  enabled: false
  configure: false

proxy_env:
  HTTPS_PROXY: "{{ https_proxy | default('') }}"
  https_proxy: "{{ https_proxy | default('') }}"
  HTTP_PROXY: "{{ http_proxy | default('') }}"
  http_proxy: "{{ http_proxy | default('') }}"
  NO_PROXY: "{{ no_proxy | default('') }}"
  no_proxy: "{{ no_proxy | default('') }}"

python_env:
  PYTHONPATH: "{{ python_path }}"

default_env: "{{ proxy_env | combine(python_env) }}"

##### Validate #########
system_default_path_env: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
system_path_env: "{{ ansible_env.PATH if ansible_env is defined and ansible_env.PATH is defined else '' }}:{{ system_default_path_env }}"
combined_env: "{{ proxy_env | combine({'PATH': system_path_env}) }}"

inventory_hostnames: "{{ groups['all'] | map('extract', hostvars, ['ansible_hostname']) | select('defined') | list }}"

validate:
  # Disk usage must be lesser than 85% on the root volume
  disk_usage_threshold: 85
  # Disk size allocation must be equal or greater than 80GB on the root volume
  # Debian based OS report the size differently, use 78 instead of 80
  disk_size_threshold: 78
  # Minimum control_plane memory allocated to each control plane machine in megabytes. The calculation is 3G (1G is allocated to the kubelet daemons) + TargetRAMMB value, if set.
  minimum_memory_control_plane_mb: 3072
  # Minimum worker memory allocated to each work machine in megabytes. The calculation is 1G + 1G(allocated to kubelet daemons).
  minimum_memory_worker_mb: 2048
  # Minimum CPU cores allocated to each machine.
  minimum_cpu_cores: 2

offline:
  os_packages_local_bundle_file: "{{ os_packages_local_bundle_file }}"
  os_packages_remote_bundle_path: "{{ os_packages_remote_bundle_path }}"
  os_packages_remote_filesystem_repo_path: "{{ os_packages_remote_bundle_path }}/offline-repo/"

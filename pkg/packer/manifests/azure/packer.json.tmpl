{
  "variables": {
    "ansible_extra_vars": "",
    "location": null,
    "build_name": "",
    "build_name_extra": "",
    "build_timestamp": "{{timestamp}}",
    "capture_container_name": "dkp-vhds",
    "client_id": "{{env `AZURE_CLIENT_ID`}}",
    "client_secret": "{{env `AZURE_CLIENT_SECRET`}}",
    "cloud_environment_name": "",
    "distribution": null,
    "distribution_version": null,
    "existing_ansible_ssh_args": "{{env `ANSIBLE_SSH_ARGS`}}",
    "extra_vars_file": "",
    "gallery_image_name": null,
    "gallery_image_locations": null,
    "gpu": "false",
    "gpu_nvidia_version": "",
    "gpu_types": "",
    "image_publisher": null,
    "image_version": "latest",
    "konvoy_image_builder_version": "0.0.1",
    "kubernetes_full_version": "",
    "manifest_output": "manifest.json",
    "plan_image_offer": "",
    "plan_image_publisher": "",
    "plan_image_sku": "",
    "private_virtual_network_with_public_ip": "",
    "remote_folder": "/tmp",
    "resource_group_name": "dkp",
    "shared_image_gallery_name": "dkp",
    "shared_image_gallery_image_version": "0.0.{{timestamp}}",
    "subscription_id": "{{env `AZURE_SUBSCRIPTION_ID`}}",
    "tenant_id": "{{env `AZURE_TENANT_ID`}}",
    "vm_size": "Standard_D2s_v3"
  },
  "builders": [
    {
      "azure_tags": {
        "build_date": "{{isotime}}",
        "build_timestamp": "{{user `build_timestamp`}}",
        "containerd_version": "{{user `containerd_version`}}",
        "distribution": "{{user `distribution`}}",
        "distribution_version": "{{user `distribution_version`}}",
        "gpu": "{{user `gpu`}}",
        "gpu_nvidia_version": "{{user `gpu_nvidia_version`}}",
        "gpu_types": "{{user `gpu_types`}}",
        "image_builder_version": "{{user `konvoy_image_builder_version`}}",
        "kubernetes_cni_version": "{{user `kubernetes_cni_version`}}",
        "kubernetes_version": "{{user `kubernetes_full_version` | clean_resource_name}}"
      },
      "client_id": "{{user `client_id`}}",
      "client_secret": "{{user `client_secret`}}",
      "image_offer": "{{user `distribution` }}",
      "image_publisher": "{{user `image_publisher` }}",
      "image_sku": "{{user `distribution_version`}}",
      "image_version": "{{user `image_version`}}",
      "cloud_environment_name": "{{user `cloud_environment_name`}}",
      "location": "{{user `location`}}",
      "managed_image_name": "{{user `gallery_image_name`}}-{{user `build_timestamp`}}",
      "managed_image_resource_group_name": "{{user `resource_group_name`}}",
      "name": "{{(user `distribution`) | lower}}-{{user `distribution_version`}}{{user `build_name_extra`}}",
      "os_type": "Linux",
      "plan_info": {
        "plan_name": "{{user `plan_image_sku`}}",
        "plan_product": "{{user `plan_image_offer`}}",
        "plan_publisher": "{{user `plan_image_publisher`}}"
      },
      "private_virtual_network_with_public_ip": "{{user `private_virtual_network_with_public_ip`}}",
      ((- if .DryRun ))
      "skip_create_image": true,
      ((- end ))
      "shared_image_gallery_destination": {
        "gallery_name": "{{user `shared_image_gallery_name`}}",
        "image_name": "{{user `gallery_image_name`}}",
        "image_version": "{{user `shared_image_gallery_image_version`}}",
        "replication_regions": "{{user `gallery_image_locations`}}",
        "resource_group": "{{user `resource_group_name`}}"
      },
      "ssh_username": "packer",
      "ssh_key_exchange_algorithms": [
        "curve25519-sha256@libssh.org",
        "ecdh-sha2-nistp256",
        "ecdh-sha2-nistp384",
        "ecdh-sha2-nistp521",
        "diffie-hellman-group14-sha1",
        "diffie-hellman-group1-sha1"
      ],
      "subscription_id": "{{user `subscription_id`}}",
      "tenant_id": "{{user `tenant_id `}}",
      "type": "azure-arm",
      "virtual_network_name": "{{user `virtual_network_name`}}",
      "virtual_network_resource_group_name": "{{user `virtual_network_resource_group_name`}}",
      "virtual_network_subnet_name": "{{user `virtual_network_subnet_name`}}",
      "vm_size": "{{user `vm_size`}}"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "remote_folder":"{{user `remote_folder`}}",
      "environment_vars": [
        "HTTP_PROXY={{user `http_proxy`}}",
        "http_proxy={{user `http_proxy`}}",
        "HTTPS_PROXY={{user `https_proxy`}}",
        "https_proxy={{user `https_proxy`}}",
        "NO_PROXY={{user `no_proxy`}}",
        "no_proxy={{user `no_proxy`}}",
        "BUILD_NAME={{user `build_name`}}"
      ],
      "inline": [
        "if [ $BUILD_NAME != \"ubuntu-1804\" ]; then exit 0; fi",
        "while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo 'Waiting for cloud-init...'; sleep 1; done",
        "sudo apt-get -qq update && sudo DEBIAN_FRONTEND=noninteractive apt-get -qqy install python python-pip"
      ]
    },
    {
      "type": "shell",
      "remote_folder":"{{user `remote_folder`}}",
      "environment_vars": [
        "HTTP_PROXY={{user `http_proxy`}}",
        "http_proxy={{user `http_proxy`}}",
        "HTTPS_PROXY={{user `https_proxy`}}",
        "https_proxy={{user `https_proxy`}}",
        "NO_PROXY={{user `no_proxy`}}",
        "no_proxy={{user `no_proxy`}}",
        "BUILD_NAME={{user `build_name`}}"
      ],
      "script": "./packer/files/no-update-flatcar.sh",
      "execute_command": "BUILD_NAME={{user `build_name`}}; if [[ \"${BUILD_NAME}\" == *\"flatcar\"* ]]; then sudo {{.Vars}} -S -E bash '{{.Path}}'; fi"
    },
    {
      "type": "shell",
      "remote_folder":"{{user `remote_folder`}}",
      "environment_vars": [
        "HTTP_PROXY={{user `http_proxy`}}",
        "http_proxy={{user `http_proxy`}}",
        "HTTPS_PROXY={{user `https_proxy`}}",
        "https_proxy={{user `https_proxy`}}",
        "NO_PROXY={{user `no_proxy`}}",
        "no_proxy={{user `no_proxy`}}",
        "BUILD_NAME={{user `build_name`}}"
      ],
      "script": "./packer/files/no-update-flatcar.sh",
      "execute_command": "BUILD_NAME={{ user `build_name`}}; if [[ \"${BUILD_NAME}\" == *\"flatcar\"* ]]; then sudo {{.Vars}} -S -E bash '{{.Path}}'; fi"
    },
    {
      "type": "shell",
      "remote_folder":"{{user `remote_folder`}}",
      "environment_vars": [
        "BUILD_NAME={{ user `build_name`}}"
      ],
      "script": "./packer/files/no-update-flatcar.sh",
      "execute_command": "BUILD_NAME={{build_name}}; if [[ \"${BUILD_NAME}\" == *\"flatcar\"* ]]; then sudo {{.Vars}} -S -E bash '{{.Path}}'; fi"
    },
    {
      "type": "shell",
      "remote_folder":"{{user `remote_folder`}}",
      "environment_vars": [
        "BUILD_NAME={{build_name}}"
      ],
      "script": "./packer/files/no-update-flatcar.sh",
      "execute_command": "BUILD_NAME={{build_name}}; if [[ \"${BUILD_NAME}\" == *\"flatcar\"* ]]; then sudo {{.Vars}} -S -E bash '{{.Path}}'; fi"
    },
    {
      "type": "shell",
      "remote_folder":"{{user `remote_folder`}}",
      "environment_vars": [
        "BUILD_NAME={{build_name}}"
      ],
      "script": "./packer/files/bootstrap-flatcar.sh",
      "execute_command": "BUILD_NAME={{ user `build_name`}}; if [[ \"${BUILD_NAME}\" == *\"flatcar\"* ]]; then sudo {{.Vars}} -S -E bash '{{.Path}}'; fi"
    },
    {
      "type": "ansible",
      "playbook_file": "./ansible/provision.yaml",
      "user": "{{user `ssh_username`}}",
      "ansible_env_vars": [
        "ANSIBLE_SSH_ARGS='{{user `existing_ansible_ssh_args`}} -o IdentitiesOnly=yes -o HostkeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa'",
        "ANSIBLE_REMOTE_TEMP='{{user `remote_folder` }}/.ansible/'"
      ],
      "extra_arguments": [
        "--extra-vars",
        "{{ user `ansible_extra_vars` }}"
      ]
    },
     {
      "type": "shell",
      "remote_folder":"{{user `remote_folder`}}",
      "inline": [
        "mkdir -p {{user `remote_folder` }}/.goss-dir"
      ]
    },
    {
        "type": "file",
        "source": "/usr/local/bin/goss",
        "destination": "{{user `remote_folder` }}/.goss-dir/goss",
        "direction": "upload",
        "max_retries": 10
    },
    {
      "arch": "{{user `goss_arch`}}",
      "format": "{{user `goss_format`}}",
      "format_options": "{{user `goss_format_options`}}",
      "goss_file": "{{user `goss_entry_file`}}",
      "inspect": "{{user `goss_inspect_mode`}}",
      "skip_install": true,
      "download_path": "{{user `remote_folder` }}/.goss-dir/goss",
      "type": "goss",
      "tests": [
        "{{user `goss_tests_dir`}}"
      ],
      "url": "{{user `goss_url`}}",
      "use_sudo": true,
      "vars_file": "{{user `goss_vars_file`}}",
      "vars_inline": {
        "ARCH": "amd64",
        "OS": "{{user `distribution` | lower}}",
        "PROVIDER": "azure"
      },
      "vars_env": {
        "HTTP_PROXY": "{{user `http_proxy`}}",
        "http_proxy": "{{user `http_proxy`}}",
        "HTTPS_PROXY": "{{user `https_proxy`}}",
        "https_proxy": "{{user `https_proxy`}}",
        "NO_PROXY": "{{user `no_proxy`}}",
        "no_proxy": "{{user `no_proxy`}}"
      },
      "version": "{{user `goss_version`}}"
    },
    {
      "type": "shell",
      "remote_folder":"{{user `remote_folder`}}",
      "inline": [
        "rm -r  {{user `remote_folder` }}/.goss-dir"
      ]
    }
  ],
  "post-processors": [
    {
      "type": "manifest",
      "output": "{{user `manifest_output`}}",
      "custom_data": {
        "containerd_version": "{{user `containerd_version`}}",
        "kubernetes_cni_version": "{{user `kubernetes_cni_semver`}}",
        "kubernetes_version": "{{user `kubernetes_full_version`}}",
        "distribution": "{{user `distribution`}}",
        "distribution_version": "{{user `distribution_version`}}",
        "compute_gallery_image_id": "/subscriptions/{{user `subscription_id`}}/resourceGroups/{{user `resource_group_name`}}/providers/Microsoft.Compute/galleries/{{user `shared_image_gallery_name`}}/images/{{user `gallery_image_name`}}/versions/{{user `shared_image_gallery_image_version`}}"
      }
    }
  ]
}

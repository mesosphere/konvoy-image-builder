{
  "variables": {
    "account_file": "{{ env `GOOGLE_APPLICATION_CREDENTIALS` }}",
    "ansible_extra_vars": "{{ user `ansible_extra_vars` }}",
    "build_name": "",
    "build_name_extra": "",
    "build_timestamp": "{{ timestamp }}",
    "gpu": "false",
    "gpu_nvidia_version": "",
    "gpu_types": "",
    "konvoy_image_builder_version": "0.0.1",
    "kubernetes_full_version": "",
    "manifest_output": "manifest.json",
    "network": "",
    "project_id": "",
    "region": "",
    "zone": "{{ user `region` }}-a",
    "disk_size": "80",
    "disk_type": "pd-standard"
  },
  "builders": [
    {
       "name": "{{(user `distribution`) | lower}}-{{user `distribution_version`}}{{user `build_name_extra`}}",
       "image_name": "konvoy-{{user `build_name`}}-{{user `kubernetes_full_version` | clean_resource_name}}-{{user `build_timestamp`}}",
       "image_family": "konvoy-{{user `build_name`}}-{{user `kubernetes_full_version` | clean_resource_name}}",
       "type": "googlecompute",
       "project_id": "{{ user `project_id` }}",
       "source_image": "{{ user `source_image` }}",
       "source_image_family": "{{ user `distribution_family` }}",
       "region": "{{ user `region` }}",
       "zone": "{{ user `zone` }}",
       "ssh_username": "{{user `ssh_username`}}",
       "disk_size": "{{ user `disk_size` }}",
       "disk_type": "{{ user `disk_type` }}",
       "ssh_key_exchange_algorithms": [
         "curve25519-sha256@libssh.org",
         "ecdh-sha2-nistp256",
         "ecdh-sha2-nistp384",
         "ecdh-sha2-nistp521",
         "diffie-hellman-group14-sha1",
         "diffie-hellman-group1-sha1"
        ],
       "wait_to_add_ssh_keys": "20s",
       "image_labels": {
         "build_date": "{{ isotime | clean_resource_name }}",
         "build_timestamp": "{{ user `build_timestamp` | clean_resource_name }}",
         "containerd_version": "{{ user `containerd_version` }}",
         "gpu": "{{user `gpu`}}",
         "gpu_nvidia_version": "{{ user `gpu_nvidia_version` }}",
         "gpu_types": "{{ user `gpu_types` }}",
         "image_builder_version": "{{ user `konvoy_image_builder_version` | clean_resource_name }}",
         "kubernetes_cni_version": "{{ user `kubernetes_cni_version` }}",
         "kubernetes_version": "{{ user `kubernetes_full_version` | clean_resource_name }}"
       },
        ((- if .DryRun ))
       "skip_create_image": true,
       ((- end ))
       "network": "{{ user `network` }}"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "environment_vars": [
        "HTTP_PROXY={{user `http_proxy`}}",
        "http_proxy={{user `http_proxy`}}",
        "HTTPS_PROXY={{user `https_proxy`}}",
        "https_proxy={{user `https_proxy`}}",
        "NO_PROXY={{user `no_proxy`}}",
        "no_proxy={{user `no_proxy`}}",
        "BUILD_NAME={{user `build_name`}}"
      ],
      "inline": [
        "if [ $BUILD_NAME != \"ubuntu-1804\" ]; then exit 0; fi",
        "while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo 'Waiting for cloud-init...'; sleep 1; done",
        "sudo apt-get -qq update && sudo DEBIAN_FRONTEND=noninteractive apt-get -qqy install python python-pip"
      ]
    },
    {
      "type": "shell",
      "environment_vars": [
        "HTTP_PROXY={{user `http_proxy`}}",
        "http_proxy={{user `http_proxy`}}",
        "HTTPS_PROXY={{user `https_proxy`}}",
        "https_proxy={{user `https_proxy`}}",
        "NO_PROXY={{user `no_proxy`}}",
        "no_proxy={{user `no_proxy`}}",
        "BUILD_NAME={{user `build_name`}}"
      ],
      "script": "./packer/files/no-update-flatcar.sh",
      "execute_command": "BUILD_NAME={{user `build_name`}}; if [[ \"${BUILD_NAME}\" == *\"flatcar\"* ]]; then sudo {{.Vars}} -S -E bash '{{.Path}}'; fi"
    },
    {
      "type": "shell",
      "environment_vars": [
        "HTTP_PROXY={{user `http_proxy`}}",
        "http_proxy={{user `http_proxy`}}",
        "HTTPS_PROXY={{user `https_proxy`}}",
        "https_proxy={{user `https_proxy`}}",
        "NO_PROXY={{user `no_proxy`}}",
        "no_proxy={{user `no_proxy`}}",
        "BUILD_NAME={{user `build_name`}}"
      ],
      "script": "./packer/files/no-update-flatcar.sh",
      "execute_command": "BUILD_NAME={{ user `build_name`}}; if [[ \"${BUILD_NAME}\" == *\"flatcar\"* ]]; then sudo {{.Vars}} -S -E bash '{{.Path}}'; fi"
    },
    {
      "type": "shell",
      "environment_vars": [
        "BUILD_NAME={{ user `build_name`}}"
      ],
      "script": "./packer/files/no-update-flatcar.sh",
      "execute_command": "BUILD_NAME={{build_name}}; if [[ \"${BUILD_NAME}\" == *\"flatcar\"* ]]; then sudo {{.Vars}} -S -E bash '{{.Path}}'; fi"
    },
    {
      "type": "shell",
      "environment_vars": [
        "BUILD_NAME={{build_name}}"
      ],
      "script": "./packer/files/no-update-flatcar.sh",
      "execute_command": "BUILD_NAME={{build_name}}; if [[ \"${BUILD_NAME}\" == *\"flatcar\"* ]]; then sudo {{.Vars}} -S -E bash '{{.Path}}'; fi"
    },
    {
      "type": "shell",
      "environment_vars": [
        "BUILD_NAME={{build_name}}"
      ],
      "script": "./packer/files/bootstrap-flatcar.sh",
      "execute_command": "BUILD_NAME={{ user `build_name`}}; if [[ \"${BUILD_NAME}\" == *\"flatcar\"* ]]; then sudo {{.Vars}} -S -E bash '{{.Path}}'; fi"
    },
    {
      "type": "ansible",
      "playbook_file": "./ansible/provision.yaml",
      "user": "{{user `ssh_username`}}",
      "ansible_env_vars": [
        "ANSIBLE_SSH_ARGS='{{user `existing_ansible_ssh_args`}} -o IdentitiesOnly=yes -o HostkeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa'",
        "ANSIBLE_REMOTE_TEMP='/tmp/.ansible/'"
      ],
      "extra_arguments": [
        "--extra-vars",
        "{{ user `ansible_extra_vars` }}"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "mkdir -p /tmp/.goss-dir"
      ]
    },
    {
        "type": "file",
        "source": "/usr/local/bin/goss",
        "destination": "/tmp/.goss-dir/goss",
        "direction": "upload",
        "max_retries": 10
    },
    {
      "arch": "{{user `goss_arch`}}",
      "format": "{{user `goss_format`}}",
      "format_options": "{{user `goss_format_options`}}",
      "goss_file": "{{user `goss_entry_file`}}",
      "inspect": "{{user `goss_inspect_mode`}}",
      "skip_install": true,
      "download_path": "/tmp/.goss-dir/goss",
      "type": "goss",
      "tests": [
        "{{user `goss_tests_dir`}}"
      ],
      "url": "{{user `goss_url`}}",
      "use_sudo": true,
      "vars_file": "{{user `goss_vars_file`}}",
      "vars_inline": {
        "ARCH": "amd64",
        "OS": "{{user `distribution` | lower}}",
        "PROVIDER": "gcp"
      },
      "vars_env": {
        "HTTP_PROXY": "{{user `http_proxy`}}",
        "http_proxy": "{{user `http_proxy`}}",
        "HTTPS_PROXY": "{{user `https_proxy`}}",
        "https_proxy": "{{user `https_proxy`}}",
        "NO_PROXY": "{{user `no_proxy`}}",
        "no_proxy": "{{user `no_proxy`}}"
      },
      "version": "{{user `goss_version`}}"
    },
    {
      "type": "shell",
      "inline": [
        "rm -r  /tmp/.goss-dir"
      ]
    }
  ],
  "post-processors": [
    {
      "type": "manifest",
      "output": "{{user `manifest_output`}}",
      "custom_data": {
        "containerd_version": "{{user `containerd_version`}}",
        "kubernetes_cni_version": "{{user `kubernetes_cni_semver`}}",
        "kubernetes_version": "{{user `kubernetes_full_version`}}",
        "distribution": "{{user `distribution`}}",
        "distribution_version": "{{user `distribution_version`}}"
      }
    }
  ]
}

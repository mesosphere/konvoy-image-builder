{
  "variables": {
    "ansible_extra_vars": "",
    "build_timestamp": "{{timestamp}}",
    "build_name_extra": "",
    "cluster": "",
    "cpu": "4",
    "cpu_cores": "1",
    "datastore": "",
    "distribution": "",
    "distribution_version": "",
    "disk_size": "20480",
    "existing_ansible_ssh_args": "{{env `ANSIBLE_SSH_ARGS`}}",
    "export_manifest": "none",
    "firmware": "bios",
    "folder": "",
    "gpu": "false",
    "gpu_nvidia_version": "",
    "gpu_types": "",
    "guest_os_type": null,
    "ib_version": "{{env `IB_VERSION`}}",
    "insecure_connection": "false",
    "kubernetes_full_version": "",
    "linked_clone": "true",
    "manifest_output": "manifest.json",
    "memory": "8192",
    "ssh_bastion_host": "{{ user `ssh_bastion_host`}}",
    "ssh_bastion_username": "{{ user `ssh_bastion_username`}}",
    "ssh_bastion_password": "{{ user `ssh_bastion_password`}}",
    "ssh_bastion_private_key_file": "{{ user `ssh_bastion_private_key_file` }}",
    "ssh_agent_auth": "false",
    "ssh_private_key_file": "",
    "ssh_password": "",
    "ssh_timeout": "60m",
    "ssh_username": "",
    "vm_name": "konvoy-{{user `build_name`}}-{{user `kubernetes_full_version` }}-{{user `build_timestamp`}}",
    "vsphere_username": "{{env `VSPHERE_USERNAME`}}",
    "vsphere_password": "{{env `VSPHERE_PASSWORD`}}",
    "vcenter_server": "{{env `VSPHERE_SERVER`}}",
    "vsphere_guest_os_type": null
  },
  "builders": [
    {
      "name": "vsphere-clone",
      "type": "vsphere-clone",
      "CPUs": "{{user `cpu`}}",
      "RAM": "{{user `memory`}}",
      "cluster": "{{user `cluster`}}",
      "communicator": "ssh",
      "cpu_cores": "{{user `cpu_cores`}}",
      "datacenter": "{{user `datacenter`}}",
      "datastore": "{{user `datastore`}}",
      "folder": "{{user `folder`}}",
      "host": "{{user `host`}}",
      "insecure_connection": "{{user `insecure_connection`}}",
      "linked_clone": "{{user `linked_clone`}}",
      "network": "{{user `network`}}",
      "password": "{{user `vsphere_password`}}",
      "ssh_agent_auth": "{{user `ssh_agent_auth`}}",
      "ssh_password": "{{user `ssh_password`}}",
      "ssh_private_key_file": "{{ user `ssh_private_key_file` }}",
      "ssh_timeout": "4h",
      "ssh_username": "{{user `ssh_username`}}",
      "ssh_key_exchange_algorithms": [
        "curve25519-sha256@libssh.org",
        "ecdh-sha2-nistp256",
        "ecdh-sha2-nistp384",
        "ecdh-sha2-nistp521",
        "diffie-hellman-group14-sha1",
        "diffie-hellman-group1-sha1"
      ],
      "template": "{{user `template`}}",
      "username": "{{user `vsphere_username`}}",
      "vcenter_server": "{{user `vcenter_server`}}",
      ((- if not .DryRun ))
      "create_snapshot": "true",
      "convert_to_template": "true",
      ((- end ))
      "ssh_bastion_host": "{{ user `ssh_bastion_host` }}",
      "ssh_bastion_username": "{{ user  `ssh_bastion_username` }}",
      "ssh_bastion_password": "{{ user `ssh_bastion_password` }}",
      "ssh_bastion_private_key_file": "{{ user `ssh_bastion_private_key_file` }}",
      "vm_name": "{{user `vm_name`}}"
    }
  ],
  "post-processors": [
    {
      "name": "packer-manifest",
      "type": "manifest",
      "custom_data": {
        "build_date": "{{isotime}}",
        "build_name": "{{user `build_name`}}",
        "build_timestamp": "{{user `build_timestamp`}}",
        "containerd_version": "{{user `containerd_version`}}",
        "custom_role": "{{user `custom_role`}}",
        "disk_size": "{{user `disk_size`}}",
        "distro_arch": "{{ user `distro_arch` }}",
        "distro_name": "{{ user `distro_name` }}",
        "distro_version": "{{ user `distro_version` }}",
        "firmware": "{{user `firmware`}}",
        "gpu": "{{user `gpu`}}",
        "gpu_nvidia_version": "{{user `gpu_nvidia_version`}}",
        "gpu_types": "{{user `gpu_types`}}",
        "guest_os_type": "{{user `guest_os_type`}}",
        "ib_version": "{{user `ib_version`}}",
        "kubernetes_cni_version": "{{user `kubernetes_cni_semver`}}",
        "kubernetes_version": "{{user `kubernetes_full_version`}}",
        "os_name": "{{user `os_display_name`}}",
        "vsphere_guest_os_type": "{{user `vsphere_guest_os_type`}}",
        "distribution": "{{user `distribution`}}",
        "distribution_version": "{{user `distribution_version`}}"
      },
      "output": "{{user `manifest_output`}}",
      "strip_path": true
    }
    ((- if .DryRun ))
    ,{
      "type": "shell-local",
      "environment_vars":[
        "GOVC_URL={{user `vcenter_server`}}",
        "GOVC_USERNAME={{user `vsphere_username`}}",
        "GOVC_PASSWORD={{user `vsphere_password`}}"
      ],
      "inline": [
        "echo 'destroying VM {{user `vm_name`}}' && govc vm.destroy {{user `vm_name`}}"
      ]
    }
    ((- end ))
  ],
  "provisioners":[
  {
      "type": "ansible",
      "playbook_file": "./ansible/provision.yaml",
      "user": "{{user `ssh_username`}}",
      "ansible_env_vars": [
        "ANSIBLE_SSH_ARGS='{{user `existing_ansible_ssh_args`}} -o IdentitiesOnly=yes -o HostkeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa'",
        "ANSIBLE_REMOTE_TEMP='/tmp/.ansible/'"
      ],
      "extra_arguments": [
        "--extra-vars",
        "{{ user `ansible_extra_vars` }}"
      ]
    },
    {
    "type": "shell",
    "inline": [
      "mkdir -p /tmp/.goss-dir"
    ]
    },
    {
        "type": "file",
        "source": "/usr/local/bin/goss",
        "destination": "/tmp/.goss-dir/goss",
        "direction": "upload",
        "max_retries": 10
    },
    {
    "arch": "{{user `goss_arch`}}",
    "format": "{{user `goss_format`}}",
    "format_options": "{{user `goss_format_options`}}",
    "goss_file": "{{user `goss_entry_file`}}",
    "inspect": "{{user `goss_inspect_mode`}}",
    "skip_install": true,
    "download_path": "/tmp/.goss-dir/goss",
    "type": "goss",
    "tests": [
      "{{user `goss_tests_dir`}}"
    ],
    "url": "{{user `goss_url`}}",
    "use_sudo": true,
    "vars_file": "{{user `goss_vars_file`}}",
    "vars_inline": {
      "ARCH": "amd64",
      "OS": "{{user `distribution` | lower}}",
      "PROVIDER": "vsphere"
    },
    "vars_env": {
      "HTTP_PROXY": "{{user `http_proxy`}}",
      "http_proxy": "{{user `http_proxy`}}",
      "HTTPS_PROXY": "{{user `https_proxy`}}",
      "https_proxy": "{{user `https_proxy`}}",
      "NO_PROXY": "{{user `no_proxy`}}",
      "no_proxy": "{{user `no_proxy`}}"
    },
    "version": "{{user `goss_version`}}"
    },
    {
      "type": "shell",
      "inline": [
        "rm -r  /tmp/.goss-dir"
      ]
    }
  ]
}

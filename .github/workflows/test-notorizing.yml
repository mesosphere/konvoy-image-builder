---
name: Test Notrarizing

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - shalin/darwin-sig

jobs:
  build-devkit-docker-image-archive:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      # - name: Docker Login
      #   uses: docker/login-action@v2
      #   with:
      #     registry: docker.io
      #     username: mesosphereci
      #     password: ${{ secrets.DOCKER_PASS }}
    
      # - name: Create kib devkit image archive
      #   run: make devkit.run
      #   env:
      #     DOCKER_CLI_EXPERIMENTAL: "enabled"
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     WHAT: make cmd/konvoy-image-wrapper/image/konvoy-image-builder.tar.gz
      
      # - name: Upload devkit docker image archive
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: devkit-image
      #     retention-days: 1
      #     path: cmd/konvoy-image-wrapper/image/konvoy-image-builder.tar.gz
          
  notarize-release:
    needs: build-devkit-docker-image-archive
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # - name: Download devkit image archive
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: devkit-image
      #     path: cmd/konvoy-image-wrapper/image/konvoy-image-builder.tar.gz
      
      # - name: Display structure of downloaded files
      #   run: ls -R
      #   working-directory:  cmd/konvoy-image-wrapper/image
      
      # - name: Import Code-Signing Certificates
      #   uses: Apple-Actions/import-codesign-certs@v1
      #   with:
      #     # The certificates in a PKCS12 file encoded as a base64 string
      #     p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
      #     # The password used to import the PKCS12 file.
      #     p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}
        
      # - name: Install gon
      #   run: |
      #     brew tap mitchellh/gon
      #     brew install mitchellh/gon/gon

      - name: Create build artifacts
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --skip-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AC_USERNAME: ${{ secrets.AC_USERNAME }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
          NOTARIZE_KIB: "false"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: kib-image-bundle
          retention-days: 1
          path: |
            dist/*.tar.gz
            dist/*.zip
            dist/*.txt

      # - name: Run Gon to notarize
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     AC_USERNAME: ${{ secrets.AC_USERNAME }}
      #     AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
      #   run: gon ./gon.hcl -log-level=info -log-json